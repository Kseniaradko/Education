// Что выведется в консоль и почему

class Foo {
    bar = 1;

    bla = () => console.log(this.bar);

    baz = function () { console.log(this.bar); };
}

new Foo().bla(); // 1
new Foo().baz(); // 1

// В первом случае выведется один. Свойство bla объявлено как стрелочная функция,
// у стрелочных функций нет своего контекста this, поэтому они берут его из родительского окружения.
// В этом случае можно сказать, что при создании класса, происходит следующее:
// constructor() {
//    this.bla = () => console.log(this.bar);
// }
// Отсюда следует, что контекст this будет браться из вновь созданного объекта.
// Он пробрасывается здесь не динамически, а привязывается статически. Берется из своего лексического окружения.
// Также будет работать если сделать таким образом:

const a = new Foo().bla;
a() //1

// Во втором случае также ответ будет 1. Так как this это неявный аргумент функции, то он проброситься в момент вызова функции.
// Он определяется с помощью определенных операторов. Либо точка, либо квадратные скобки.
// Здесь слева от точки создается новый экземпляр класса, в котором есть переменная bar.



